@{
    ViewData["Title"] = "Show TimeSheet";
    var attendances = ViewBag.attendances as List<DataTransferObject.AttendanceDTO.AttendanceDTO>;
    var role = Context.Session.GetString("role")?.ToLower();
    var departments = ViewBag.departments;

    int selectedMonth = int.TryParse(ViewContext.HttpContext.Request.Query["month"], out var m) ? m : DateTime.Now.Month;
    int selectedYear = int.TryParse(ViewContext.HttpContext.Request.Query["year"], out var y) ? y : DateTime.Now.Year;
    string selectedDepartment = ViewContext.HttpContext.Request.Query["department"];
    
    string[] rowColors = new[] { "table-primary", "table-secondary", "table-success", "table-danger", "table-warning", "table-info", "table-light" };
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<style>
    .back-button {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        text-decoration: none;
        font-size: 1.1rem;
        font-weight: 500;
        color: #333;
        transition: color 0.3s ease, transform 0.3s ease;
        padding: 6px 12px;
        border-radius: 8px;
    }

        .back-button i {
            font-size: 1.4rem;
            transition: transform 0.3s ease;
        }

        .back-button:hover {
            color: #0d6efd;
            background-color: #f1f1f1;
            text-decoration: none;
        }

            .back-button:hover i {
                transform: translateX(-3px);
            }

</style>

<div class="container d-flex justify-content-center align-items-center min-vh-100">
    <div class="card shadow-lg w-100" style="max-width: 1100px;">
        <div class="card-body">
            <a asp-controller="Employee" asp-action="Dashboard" class="back-button">
                <i class="bi bi-arrow-left"></i>
                <span>Back</span>
            </a>
            <h2 class="text-center text-primary mb-4">📊 Employee Timesheet</h2>
            <div>
                <form method="get" class="row row-cols-lg-auto g-3 align-items-end mb-4 justify-content-center">
                    <div class="col">
                        <label for="monthSelect" class="form-label">Month</label>
                        <select id="monthSelect" name="month" class="form-select filter-select" style="width: 250px">
                            @for (int i = 1; i <= 12; i++)
                            {
                                <option value="@i" selected="@(i == selectedMonth ? "selected" : null)">
                                    @i
                                </option>
                            }
                        </select>
                    </div>

                    <div class="col">
                        <label for="yearSelect" class="form-label">Year</label>
                        <select id="yearSelect" name="year" class="form-select filter-select" style="width: 250px">
                            @{
                                int currentYear = DateTime.Now.Year;
                                for (int ye = currentYear - 5; ye <= currentYear + 1; ye++)
                                {
                                    <option value="@ye" selected="@(ye == selectedYear ? "selected" : null)">
                                        @ye
                                    </option>
                                }
                            }
                        </select>
                    </div>

                    <div class="col">
                        <button type="submit" class="btn btn-primary" style="width: 250px">🔍 Filter</button>
                    </div>
                </form>
            </div>
            <div class="table-responsive">
                <table class="table table-bordered table-hover text-center align-middle">
                    <thead class="table-dark">
                        <tr>
                            <th>Employee ID</th>
                            <th>Name</th>
                            <th>Department</th>
                            <th>Work Date</th>
                            <th>Check In</th>
                            <th>Check Out</th>
                            <th>Total Time (hrs)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (attendances != null && attendances.Any())
                        {
                            int i = 0;
                            foreach (var item in attendances)
                            {
                                var colorClass = rowColors[i % rowColors.Length];
                                TimeSpan? totalTime = (item.CheckOut.HasValue && item.CheckIn != null)
                                ? item.CheckOut.Value - item.CheckIn - TimeSpan.FromHours(1)
                                : null;

                                <tr class="@colorClass">
                                    <td>@item.EmployeeId</td>
                                    <td>@item.EmployeeName</td>
                                    <td>@item.DepartmentName</td>
                                    <td>@item.WorkDate.ToString("yyyy-MM-dd")</td>
                                    <td>@item.CheckIn.ToString("HH:mm")</td>
                                    <td>@item.CheckOut?.ToString("HH:mm")</td>
                                    <td class="fw-bold text-dark">@((totalTime?.TotalHours.ToString("0.00") ?? "-"))</td>
                                </tr>
                                i++;
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-danger fw-bold">No attendance records found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (role == "staff")
            {
                <div class="d-flex justify-content-center mt-4 gap-3 flex-wrap">
                    <a id="exportExcelBtn" class="btn btn-outline-success px-4 py-2">⬇️ Export to Excel</a>
                    <button class="btn btn-outline-primary px-4 py-2" onclick="calculateMonthlySalary()">💰 Calculate Salary</button>
                </div>
            }

            <div class="text-center mt-4">
                <h5 id="salaryResult" class="text-primary fw-bold"></h5>
            </div>
        </div>
    </div>
</div>

<script>
    function calculateMonthlySalary() {
        const row = document.querySelector("tbody tr");
        if (!row || row.cells.length < 1) {
            document.getElementById("salaryResult").innerText = "❌ Không tìm thấy dữ liệu chấm công.";
            return;
        }

        const employeeId = row.cells[0].textContent.trim();

        const today = new Date();
        const month = today.getMonth() + 1;
        const year = today.getFullYear();

        fetch(`/Attendance/CaculateSalary?employeeId=${employeeId}&month=${month}&year=${year}`, {
            method: 'POST'
        })
            .then(response => {
                if (!response.ok) throw new Error("Lỗi từ server");
                return response.json();
            })
            .then(data => {
                document.getElementById("salaryResult").innerText = "✅ " + data.message;
            })
            .catch(error => {
                document.getElementById("salaryResult").innerText = "❌ Tính lương thất bại: " + error.message;
            });
    }


    window.onload = () => {
        const row = document.querySelector("tbody tr");
        if (row && row.cells.length >= 1) {
            const employeeId = row.cells[0].textContent.trim();

            const urlParams = new URLSearchParams(window.location.search);
            const month = urlParams.get("month") || new Date().getMonth() + 1;
            const year = urlParams.get("year") || new Date().getFullYear();

            document.getElementById("exportExcelBtn").href = `/Attendance/ExportTimeSheetToExcel?EmployId=${employeeId}&month=${month}&year=${year}`;
        }
    }

</script>
