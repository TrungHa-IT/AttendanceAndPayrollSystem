@using DataTransferObject.AttendanceDTO
@using DataTransferObject.DateTimeDTO
@using DataTransferObject.ManagerDTO
@{
    ViewData["Title"] = "Timekeeping";
    var year = ViewBag.Year;
    var weekOptions = ViewBag.WeekOptions as List<WeekOption>;
    var selectedWeek = ViewBag.SelectedWeek as string;
    var days = ViewBag.DaysInWeek as List<DateTime>;
    var approvedOTDates = ViewBag.approvedOTs as List<ApprovedOTDTO> ?? new();
    var statusList = ViewBag.OTStatusList as List<OTStatusDTO> ?? new();
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<style>
    .back-button {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        text-decoration: none;
        font-size: 1.1rem;
        font-weight: 500;
        color: #333;
        transition: color 0.3s ease, transform 0.3s ease;
        padding: 6px 12px;
        border-radius: 8px;
    }

        .back-button i {
            font-size: 1.4rem; 
            transition: transform 0.3s ease;
        }

        .back-button:hover {
            color: #0d6efd; 
            background-color: #f1f1f1;
            text-decoration: none;
        }

            .back-button:hover i {
                transform: translateX(-3px); 
            }


</style>

<a asp-controller="Employee" asp-action="Dashboard" class="back-button">
    <i class="bi bi-arrow-left"></i>
    <span>Back</span>
</a>

<h2>Timekeeping</h2>

<form method="get" asp-action="Index">
    <label style="color:red">YEAR</label>
    <select name="year" onchange="this.form.submit()">
        @for (int y = DateTime.Now.Year - 1; y <= DateTime.Now.Year + 1; y++)
        {
            <option value="@y" selected="@(y == year)">@y</option>
        }
    </select>

    <label style="margin-left: 20px;">WEEK</label>
    <select name="week" onchange="this.form.submit()">
        @foreach (var item in weekOptions)
        {
            <option value="@item.Display" selected="@(item.Display == selectedWeek)">
                @item.Display
            </option>
        }
    </select>
</form>

<table class="table table-bordered mt-3 text-center" style="background-color: #6c9cd1; color: black;">
    <thead>
        <tr>
            @foreach (var d in days)
            {
                <th>@d.ToString("ddd").ToUpper()</th>
            }
        </tr>
    </thead>
    <tbody>
        <tr>
            @foreach (var d in days)
            {
                <td>@d.ToString("dd/MM")</td>
            }
        </tr>
        <tr>
            @foreach (var d in days)
            {
                <td>
                    @if (d.DayOfWeek >= DayOfWeek.Monday && d.DayOfWeek <= DayOfWeek.Friday)
                    {
                        var idSuffix = d.ToString("yyyyMMdd");
                        var dateOnly = DateOnly.FromDateTime(d);
                        var otStatus = statusList.FirstOrDefault(s => s.OvertimeDate == dateOnly);

                        if (d.Date == DateTime.Today)
                        {
                            <button class="btn btn-success btn-sm" id="checkInBtn_@idSuffix" onclick="handleCheckIn()" type="button">Check In</button>
                            <button class="btn btn-secondary btn-sm mt-1" id="checkOutBtn_@idSuffix" onclick="handleCheckOut()" type="button" disabled>Check Out</button>

                            var otItem = approvedOTDates.FirstOrDefault(x => x.OvertimeDate == dateOnly);
                            if (otItem != null)
                            {
                                <hr />
                                <button class="btn btn-warning btn-sm" id="checkInOTBtn_@idSuffix"
                                        data-request-id="@otItem.OvertimeRequestId"
                                        onclick="handleCheckInOT(this)"
                                        type="button">
                                    Check In OT
                                </button>
                                <button class="btn btn-danger btn-sm mt-1"
                                        id="checkOutOTBtn_@idSuffix"
                                        data-request-id="@otItem.OvertimeRequestId"
                                        onclick="handleCheckOutOT(this)" type="button" disabled>
                                    Check Out OT
                                </button>
                         
                            }
                            <div class="mt-2">
                                <span class="badge bg-info text-dark"> @ViewBag.LatestOTStatus</span>
                            </div>

                        }
                        else if (d.Date < DateTime.Today)
                        {
                            <span>✔ Past</span>
                        }
                        else
                        {
                            <button class="btn btn-success btn-sm" type="button" disabled>Check In</button>
                            <button class="btn btn-secondary btn-sm mt-1" type="button" disabled>Check Out</button>
                        }
                        @if (otStatus != null)
                        {
                            var statusClass = otStatus.Status.ToLower() switch
                            {
                                "approved" => "bg-success text-white",
                                "rejected" => "bg-danger text-white",
                                "presented" => "bg-primary text-white",
                                _ => "bg-secondary text-white"
                            };

                            <div class="mt-1">
                                <span class="badge @statusClass">
                                    Trạng thái OT: @otStatus.Status
                                </span>
                            </div>

                            <div class="mt-1">
                                <span class="badge bg-light text-dark">
                                    Thời gian OT: @otStatus.StartTime.ToString("HH\\:mm") - @otStatus.EndTime.ToString("HH\\:mm")
                                </span>
                            </div>
                        }



                    }
                    else
                    {
                        <span>—</span>
                    }
                </td>
            }
        </tr>
    </tbody>
</table>

@section Scripts {
    <script>
        window.onload = function () {
            const today = new Date();
            const idSuffix = today.toISOString().split('T')[0].replaceAll('-', '');

            fetch('/ManageSchedule/CheckInStatus')
                .then(res => res.json())
                .then(data => {
                    const checkInBtn = document.getElementById("checkInBtn_" + idSuffix);
                    const checkOutBtn = document.getElementById("checkOutBtn_" + idSuffix);
                    const checkInOTBtn = document.getElementById("checkInOTBtn_" + idSuffix);
                    const checkOutOTBtn = document.getElementById("checkOutOTBtn_" + idSuffix);

                    if (data.hasCheckedIn) {
                        if (checkInBtn) {
                            checkInBtn.disabled = true;
                            checkInBtn.innerText = "✔ Already Checked In";
                        }
                        if (checkOutBtn) {
                            checkOutBtn.disabled = false;
                            checkOutBtn.classList.remove("btn-secondary");
                            checkOutBtn.classList.add("btn-primary");
                        }
                    }

                    if (data.hasCheckedInOT) {
                        if (checkInOTBtn) {
                            checkInOTBtn.disabled = true;
                            checkInOTBtn.innerText = "✔ Already Checked In OT";
                        }
                        if (checkOutOTBtn) {
                            checkOutOTBtn.disabled = false;
                            checkOutOTBtn.classList.remove("btn-danger");
                            checkOutOTBtn.classList.add("btn-primary");
                        }
                    }
                })
                .catch(err => console.error("Status load error:", err));
        };

        function handleCheckIn() {
            fetch('/ManageSchedule/CheckIn', { method: 'POST', headers: { 'Content-Type': 'application/json' } })
                .then(res => res.json().then(data => ({ status: res.status, body: data })))
                .then(({ status, body }) => {
                    if (status === 200) {
                        const idSuffix = new Date().toISOString().split('T')[0].replaceAll('-', '');
                        const checkInBtn = document.getElementById("checkInBtn_" + idSuffix);
                        const checkOutBtn = document.getElementById("checkOutBtn_" + idSuffix);

                        if (checkInBtn) {
                            checkInBtn.disabled = true;
                            checkInBtn.innerText = "✔ Checked In (" + new Date().toLocaleTimeString() + ")";
                        }
                        if (checkOutBtn) {
                            checkOutBtn.disabled = false;
                            checkOutBtn.classList.remove("btn-secondary");
                            checkOutBtn.classList.add("btn-primary");
                        }

                        alert(body.message); 
                    } else {
                        alert(body.message); 
                    }
                })
                .catch(() => alert("Check-in failed due to network or server issue."));
        }


        function handleCheckOut() {
            fetch('/ManageSchedule/CheckOut', { method: 'POST', headers: { 'Content-Type': 'application/json' } })
                .then(res => res.json())
                .then(() => {
                    const idSuffix = new Date().toISOString().split('T')[0].replaceAll('-', '');
                    const checkOutBtn = document.getElementById("checkOutBtn_" + idSuffix);
                    if (checkOutBtn) {
                        checkOutBtn.disabled = true;
                        checkOutBtn.innerText = "✔ Checked Out (" + new Date().toLocaleTimeString() + ")";
                        checkOutBtn.classList.remove("btn-primary");
                        checkOutBtn.classList.add("btn-success");
                    }
                })
                .catch(() => alert("Check-out failed."));
        }

        function handleCheckInOT(button) {
            const requestId = parseInt(button.getAttribute("data-request-id"));

            fetch('/TimeKeep/CheckInOT', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: new URLSearchParams({ requestId })
            })
                .then(res => res.json())
                .then(data => {
                    const parsed = typeof data.data === "string" ? JSON.parse(data.data) : data.data;

                    alert(parsed.message);
                    if (parsed.success === true) {
                        const idSuffix = new Date().toISOString().split('T')[0].replaceAll('-', '');
                        const checkInOTBtn = document.getElementById("checkInOTBtn_" + idSuffix);
                        const checkOutOTBtn = document.getElementById("checkOutOTBtn_" + idSuffix);

                        if (checkInOTBtn) {
                            checkInOTBtn.disabled = true;
                            checkInOTBtn.innerText = "✔ Checked In OT";
                        }
                        if (checkOutOTBtn) {
                            checkOutOTBtn.disabled = false;
                            checkOutOTBtn.classList.remove("btn-danger");
                            checkOutOTBtn.classList.add("btn-primary");
                        }
                    }
                })
                .catch(() => {
                    alert("Check-in OT failed.");
                });
        }


        function handleCheckOutOT(button) {
            const requestId = parseInt(button.getAttribute("data-request-id"));

            fetch('/TimeKeep/CheckOutOT', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: new URLSearchParams({ requestId })
            })
                .then(res => {
                    if (!res.ok) throw new Error();
                    return res.json();
                })
                .then(() => {
                    const idSuffix = new Date().toISOString().split('T')[0].replaceAll('-', '');
                    const checkOutOTBtn = document.getElementById("checkOutOTBtn_" + idSuffix);
                    if (checkOutOTBtn) {
                        checkOutOTBtn.disabled = true;
                        checkOutOTBtn.innerText = "✔ Checked Out OT (" + new Date().toLocaleTimeString() + ")";
                        checkOutOTBtn.classList.remove("btn-primary");
                        checkOutOTBtn.classList.add("btn-success");
                    }
                })
                .catch(() => alert("Check-out OT failed."));
        }

    </script>
}
