@{
    ViewData["Title"] = "Manage Attendance";
    var employees = ViewBag.Employees as List<DataTransferObject.EmployeeDTOS.EmployeeDTO>;
    var departments = ViewBag.departments;

    int selectedMonth = int.TryParse(ViewContext.HttpContext.Request.Query["month"], out var m) ? m : DateTime.Now.Month;
    int selectedYear = int.TryParse(ViewContext.HttpContext.Request.Query["year"], out var y) ? y : DateTime.Now.Year;
    string selectedDepartment = ViewContext.HttpContext.Request.Query["department"];
}

<!-- Bootstrap 5 -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<style>
    body {
        background: linear-gradient(135deg, #f0f8ff, #e6f7ff);
    }

    .attendance-container {
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 40px 20px;
    }

    .attendance-card {
        background-color: #ffffff;
        border-radius: 25px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        padding: 40px;
        width: 100%;
        max-width: 1300px;
    }

    .attendance-title {
        font-size: 2rem;
        font-weight: bold;
        color: #2c3e50;
        text-align: center;
        margin-bottom: 30px;
    }

    .table thead th {
        background-color: #2c3e50 !important;
        color: white;
        vertical-align: middle;
    }

    .table tbody td {
        vertical-align: middle;
    }

    .filter-select {
        width: 250px;
    }

    .btn-export {
        padding: 12px 30px;
        font-size: 1.1rem;
        border-radius: 12px;
    }

    .no-data {
        font-size: 1.1rem;
        color: #c0392b;
        font-weight: 500;
        padding: 20px 0;
    }

    .back-button {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        text-decoration: none;
        font-size: 1.1rem;
        font-weight: 500;
        color: #333;
        transition: color 0.3s ease, transform 0.3s ease;
        padding: 6px 12px;
        border-radius: 8px;
    }

        .back-button i {
            font-size: 1.4rem;
            transition: transform 0.3s ease;
        }

        .back-button:hover {
            color: #0d6efd;
            background-color: #f1f1f1;
            text-decoration: none;
        }

            .back-button:hover i {
                transform: translateX(-3px);
            }
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<a asp-controller="Staff" asp-action="Dashboard" class="back-button">
    <i class="bi bi-arrow-left"></i>
    <span>Back</span>
</a>
<div class="attendance-container">
    <div class="attendance-card">
        <h2 class="attendance-title">📊 Manage Attendance & Salary Report</h2>

        <!-- Filter Section -->
        <form method="get" class="row row-cols-lg-auto g-3 align-items-end mb-4 justify-content-center">
            <div class="col">
                <label for="monthSelect" class="form-label">Month</label>
                <select id="monthSelect" name="month" class="form-select filter-select">
                    @for (int i = 1; i <= 12; i++)
                    {
                        <option value="@i" selected="@(i == selectedMonth ? "selected" : null)">
                            @i
                        </option>
                    }
                </select>
            </div>

            <div class="col">
                <label for="yearSelect" class="form-label">Year</label>
                <select id="yearSelect" name="year" class="form-select filter-select">
                    @{
                        int currentYear = DateTime.Now.Year;
                        for (int ye = currentYear - 5; ye <= currentYear + 1; ye++)
                        {
                            <option value="@ye" selected="@(ye == selectedYear ? "selected" : null)">
                                @ye
                            </option>
                        }
                    }
                </select>
            </div>

            <div class="col">
                <label for="departmentSelect" class="form-label">Department</label>
                <select id="departmentSelect" name="department" class="form-select filter-select">
                    <option value="" selected="@(string.IsNullOrEmpty(selectedDepartment) ? "selected" : null)">All</option>
                    @if (departments != null)
                    {
                        foreach (var dept in departments)
                        {
                            <option value="@dept.DepartmentId" selected="@(dept.DepartmentId.ToString() == selectedDepartment ? "selected" : null)">
                                @dept.DepartmentName
                            </option>
                        }
                    }
                </select>
            </div>

            <div class="col">
                <button type="submit" class="btn btn-primary">🔍 Filter</button>
            </div>
        </form>

        <!-- Employee Table -->
        <div class="table-responsive">
            <table class="table table-bordered table-hover text-center align-middle">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>DOB</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Gender</th>
                        <th>Address</th>
                        <th>Position</th>
                        <th>Department</th>
                        <th>Total Payroll Hours</th>  
                        <th>Total OT Hours</th>
                        <th>Total Hour</th>
                        <th>Salary</th>
                    </tr>
                </thead>
                <tbody>
                    @if (employees != null && employees.Any())
                    {
                        foreach (var emp in employees)
                        {
                            <tr>
                                <td>@emp.EmployId</td>
                                <td>@emp.EmployeeName</td>
                                <td>@emp.Dob?.ToString("yyyy-MM-dd")</td>
                                <td>@emp.Email</td>
                                <td>@emp.PhoneNumber</td>
                                <td>@emp.Gender</td>
                                <td>@emp.Address</td>
                                <td>@emp.Position</td>
                                <td>@emp.DepartmentName</td>
                                <td>@emp.PayrollTime</td>          
                                <td>@emp.OvertimeTime</td>
                                <td>@emp.TotalTimeWorked</td>
                                <td>@emp.TotalSalary VND</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="11" class="text-center no-data">No employee data available</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Export Button -->
        <div class="d-flex justify-content-center mt-4">
            <a id="exportExcelBtn" class="btn btn-success btn-export">⬇ Export to Excel</a>
        </div>
    </div>
</div>

<!-- Export Script -->
<script>
    window.onload = () => {
        const exportBtn = document.getElementById("exportExcelBtn");

        exportBtn.addEventListener("click", function () {
            const month = document.getElementById("monthSelect").value;
            const year = document.getElementById("yearSelect").value;
            const department = document.getElementById("departmentSelect").value;

            const url = `/Staff/ExportTimeSheetToExcel?month=${month}&year=${year}&department=${department}`;
            window.location.href = url;
        });
    }
</script>
